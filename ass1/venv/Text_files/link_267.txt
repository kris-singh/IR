URL: https://docs.python.org/3/library/pipes.html

Title: 35.10. pipes — Interface to shell pipelines — Python 3.5.2 documentation

Doc Id: 267

Meta Tags : No meta tag found in document

Date :Jun 27, 2016

Content :Source code: Lib/pipes.py
The pipes module defines a class to abstract the concept of a pipeline
— a sequence of converters from one file to  another.
Because the module uses /bin/sh command lines, a POSIX or compatible
shell for os.system() and os.popen() is required.
The pipes module defines the following class:
An abstraction of a pipeline.
Example:
Template objects following methods:
Restore a pipeline template to its initial state.
Return a new, equivalent, pipeline template.
If flag is true, turn debugging on. Otherwise, turn debugging off. When
debugging is on, commands to be executed are printed, and the shell is given
set -x command to be more verbose.
Append a new action at the end. The cmd variable must be a valid bourne shell
command. The kind variable consists of two letters.
The first letter can be either of '-' (which means the command reads its
standard input), 'f' (which means the commands reads a given file on the
command line) or '.' (which means the commands reads no input, and hence
must be first.)
Similarly, the second letter can be either of '-' (which means  the command
writes to standard output), 'f' (which means the  command writes a file on
the command line) or '.' (which means the command does not write anything,
and hence must be last.)
Add a new action at the beginning. See append() for explanations of the
arguments.
Return a file-like object, open to file, but read from or written to by the
pipeline.  Note that only one of 'r', 'w' may be given.
Copy infile to outfile through the pipe.
35.9. fcntl — The fcntl and ioctl system calls
35.11. resource — Resource usage information

    Enter search terms or a module, class or function name.
    

