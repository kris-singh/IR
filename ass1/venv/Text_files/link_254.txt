URL: https://docs.python.org/3/library/pickletools.html

Title: 32.13. pickletools — Tools for pickle developers — Python 3.5.2 documentation

Doc Id: 254

Meta Tags : No meta tag found in document

Date :Jul 29, 2016

Content :Source code: Lib/pickletools.py
This module contains various constants relating to the intimate details of the
pickle module, some lengthy comments about the implementation, and a
few useful functions for analyzing pickled data.  The contents of this module
are useful for Python core developers who are working on the pickle;
ordinary users of the pickle module probably won’t find the
pickletools module relevant.
New in version 3.2.
When invoked from the command line, python -m pickletools will
disassemble the contents of one or more pickle files.  Note that if
you want to see the Python object stored in the pickle rather than the
details of pickle format, you may want to use -m pickle instead.
However, when the pickle file that you want to examine comes from an
untrusted source, -m pickletools is a safer option because it does
not execute pickle bytecode.
For example, with a tuple (1, 2) pickled in file x.pickle:
Annotate each line with a short opcode description.
Name of a file where the output should be written.
The number of blanks by which to indent a new MARK level.
When multiple objects are disassembled, preserve memo between
disassemblies.
When more than one pickle file are specified, print given preamble
before each disassembly.
New in version 3.2: The annotate argument.
Provides an iterator over all of the opcodes in a pickle, returning a
sequence of (opcode, arg, pos) triples.  opcode is an instance of an
OpcodeInfo class; arg is the decoded value, as a Python object, of
the opcode’s argument; pos is the position at which this opcode is located.
pickle can be a string or a file-like object.
Returns a new equivalent pickle string after eliminating unused PUT
opcodes. The optimized pickle is shorter, takes less transmission time,
requires less storage space, and unpickles more efficiently.
32.12. dis — Disassembler for Python bytecode
33. Miscellaneous Services

    Enter search terms or a module, class or function name.
    

