URL: https://docs.python.org/3/library/statistics.html

Title: 9.7. statistics — Mathematical statistics functions — Python 3.5.2 documentation

Doc Id: 78

Meta Tags : No meta tag found in document

Date :Jun 27, 2016

Content :New in version 3.4.
Source code: Lib/statistics.py
This module provides functions for calculating mathematical statistics of
numeric (Real-valued) data.
Note
Unless explicitly noted otherwise, these functions support int,
float, decimal.Decimal and fractions.Fraction.
Behaviour with other types (whether in the numeric tower or not) is
currently unsupported.  Mixed types are also undefined and
implementation-dependent.  If your input data consists of mixed types,
you may be able to use map() to ensure a consistent result, e.g.
map(float, input_data).
These functions calculate an average or typical value from a population
or sample.
These functions calculate a measure of how much the population or sample
tends to deviate from the typical or average values.
Note: The functions do not require the data given to them to be sorted.
However, for reading convenience, most of the examples show sorted sequences.
Return the sample arithmetic mean of data, a sequence or iterator of
real-valued numbers.
The arithmetic mean is the sum of the data divided by the number of data
points.  It is commonly called “the average”, although it is only one of many
different mathematical averages.  It is a measure of the central location of
the data.
If data is empty, StatisticsError will be raised.
Some examples of use:
Note
The mean is strongly affected by outliers and is not a robust estimator
for central location: the mean is not necessarily a typical example of the
data points.  For more robust, although less efficient, measures of
central location, see median() and mode().  (In this case,
“efficient” refers to statistical efficiency rather than computational
efficiency.)
The sample mean gives an unbiased estimate of the true population mean,
which means that, taken on average over all the possible samples,
mean(sample) converges on the true mean of the entire population.  If
data represents the entire population rather than a sample, then
mean(data) is equivalent to calculating the true population mean μ.
Return the median (middle value) of numeric data, using the common “mean of
middle two” method.  If data is empty, StatisticsError is raised.
The median is a robust measure of central location, and is less affected by
the presence of outliers in your data.  When the number of data points is
odd, the middle data point is returned:
When the number of data points is even, the median is interpolated by taking
the average of the two middle values:
This is suited for when your data is discrete, and you don’t mind that the
median may not be an actual data point.
See also
median_low(), median_high(), median_grouped()
Return the low median of numeric data.  If data is empty,
StatisticsError is raised.
The low median is always a member of the data set.  When the number of data
points is odd, the middle value is returned.  When it is even, the smaller of
the two middle values is returned.
Use the low median when your data are discrete and you prefer the median to
be an actual data point rather than interpolated.
Return the high median of data.  If data is empty, StatisticsError
is raised.
The high median is always a member of the data set.  When the number of data
points is odd, the middle value is returned.  When it is even, the larger of
the two middle values is returned.
Use the high median when your data are discrete and you prefer the median to
be an actual data point rather than interpolated.
Return the median of grouped continuous data, calculated as the 50th
percentile, using interpolation.  If data is empty, StatisticsError
is raised.
In the following example, the data are rounded, so that each value represents
the midpoint of data classes, e.g. 1 is the midpoint of the class 0.5-1.5, 2
is the midpoint of 1.5-2.5, 3 is the midpoint of 2.5-3.5, etc.  With the data
given, the middle value falls somewhere in the class 3.5-4.5, and
interpolation is used to estimate it:
Optional argument interval represents the class interval, and defaults
to 1.  Changing the class interval naturally will change the interpolation:
This function does not check whether the data points are at least
interval apart.
CPython implementation detail: Under some circumstances, median_grouped() may coerce data points to
floats.  This behaviour is likely to change in the future.
See also
Return the most common data point from discrete or nominal data.  The mode
(when it exists) is the most typical value, and is a robust measure of
central location.
If data is empty, or if there is not exactly one most common value,
StatisticsError is raised.
mode assumes discrete data, and returns a single value. This is the
standard treatment of the mode as commonly taught in schools:
The mode is unique in that it is the only statistic which also applies
to nominal (non-numeric) data:
Return the population standard deviation (the square root of the population
variance).  See pvariance() for arguments and other details.
Return the population variance of data, a non-empty iterable of real-valued
numbers.  Variance, or second moment about the mean, is a measure of the
variability (spread or dispersion) of data.  A large variance indicates that
the data is spread out; a small variance indicates it is clustered closely
around the mean.
If the optional second argument mu is given, it should be the mean of
data.  If it is missing or None (the default), the mean is
automatically calculated.
Use this function to calculate the variance from the entire population.  To
estimate the variance from a sample, the variance() function is usually
a better choice.
Raises StatisticsError if data is empty.
Examples:
If you have already calculated the mean of your data, you can pass it as the
optional second argument mu to avoid recalculation:
This function does not attempt to verify that you have passed the actual mean
as mu.  Using arbitrary values for mu may lead to invalid or impossible
results.
Decimals and Fractions are supported:
Note
When called with the entire population, this gives the population variance
σ².  When called on a sample instead, this is the biased sample variance
s², also known as variance with N degrees of freedom.
If you somehow know the true population mean μ, you may use this function
to calculate the variance of a sample, giving the known population mean as
the second argument.  Provided the data points are representative
(e.g. independent and identically distributed), the result will be an
unbiased estimate of the population variance.
Return the sample standard deviation (the square root of the sample
variance).  See variance() for arguments and other details.
Return the sample variance of data, an iterable of at least two real-valued
numbers.  Variance, or second moment about the mean, is a measure of the
variability (spread or dispersion) of data.  A large variance indicates that
the data is spread out; a small variance indicates it is clustered closely
around the mean.
If the optional second argument xbar is given, it should be the mean of
data.  If it is missing or None (the default), the mean is
automatically calculated.
Use this function when your data is a sample from a population. To calculate
the variance from the entire population, see pvariance().
Raises StatisticsError if data has fewer than two values.
Examples:
If you have already calculated the mean of your data, you can pass it as the
optional second argument xbar to avoid recalculation:
This function does not attempt to verify that you have passed the actual mean
as xbar.  Using arbitrary values for xbar can lead to invalid or
impossible results.
Decimal and Fraction values are supported:
Note
This is the sample variance s² with Bessel’s correction, also known as
variance with N-1 degrees of freedom.  Provided that the data points are
representative (e.g. independent and identically distributed), the result
should be an unbiased estimate of the true population variance.
If you somehow know the actual population mean μ you should pass it to the
pvariance() function as the mu parameter to get the variance of a
sample.
A single exception is defined:
Subclass of ValueError for statistics-related exceptions.
9.6. random — Generate pseudo-random numbers
10. Functional Programming Modules

    Enter search terms or a module, class or function name.
    

