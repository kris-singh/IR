URL: https://docs.python.org/3/library/aifc.html

Title: 22.2. aifc — Read and write AIFF and AIFC files — Python 3.5.2 documentation

Doc Id: 185

Meta Tags : No meta tag found in document

Date :Jun 27, 2016

Content :Source code: Lib/aifc.py
This module provides support for reading and writing AIFF and AIFF-C files.
AIFF is Audio Interchange File Format, a format for storing digital audio
samples in a file.  AIFF-C is a newer version of the format that includes the
ability to compress the audio data.
Note
Some operations may only work under IRIX; these will raise ImportError
when attempting to import the cl module, which is only available on
IRIX.
Audio files have a number of parameters that describe the audio data. The
sampling rate or frame rate is the number of times per second the sound is
sampled.  The number of channels indicate if the audio is mono, stereo, or
quadro.  Each frame consists of one sample per channel.  The sample size is the
size in bytes of each sample.  Thus a frame consists of
nchannels * samplesize bytes, and a second’s worth of audio consists of
nchannels * samplesize * framerate bytes.
For example, CD quality audio has a sample size of two bytes (16 bits), uses two
channels (stereo) and has a frame rate of 44,100 frames/second.  This gives a
frame size of 4 bytes (2*2), and a second’s worth occupies 2*2*44100 bytes
(176,400 bytes).
Module aifc defines the following function:
Open an AIFF or AIFF-C file and return an object instance with methods that are
described below.  The argument file is either a string naming a file or a
file object.  mode must be 'r' or 'rb' when the file must be
opened for reading, or 'w'  or 'wb' when the file must be opened for writing.
If omitted, file.mode is used if it exists, otherwise 'rb' is used.  When
used for writing, the file object should be seekable, unless you know ahead of
time how many samples you are going to write in total and use
writeframesraw() and setnframes().
The open() function may be used in a with statement.  When
the with block completes, the close() method is called.
Changed in version 3.4: Support for the with statement was added.
Objects returned by open() when a file is opened for reading have the
following methods:
Return the number of audio channels (1 for mono, 2 for stereo).
Return the size in bytes of individual samples.
Return the sampling rate (number of audio frames per second).
Return the number of audio frames in the file.
Return a bytes array of length 4 describing the type of compression
used in the audio file.  For AIFF files, the returned value is
b'NONE'.
Return a bytes array convertible to a human-readable description
of the type of compression used in the audio file.  For AIFF files,
the returned value is b'not compressed'.
Returns a namedtuple() (nchannels, sampwidth,
framerate, nframes, comptype, compname), equivalent to output of the
get*() methods.
Return a list of markers in the audio file.  A marker consists of a tuple of
three elements.  The first is the mark ID (an integer), the second is the mark
position in frames from the beginning of the data (an integer), the third is the
name of the mark (a string).
Return the tuple as described in getmarkers() for the mark with the given
id.
Read and return the next nframes frames from the audio file.  The returned
data is a string containing for each frame the uncompressed samples of all
channels.
Rewind the read pointer.  The next readframes() will start from the
beginning.
Seek to the specified frame number.
Return the current frame number.
Close the AIFF file.  After calling this method, the object can no longer be
used.
Objects returned by open() when a file is opened for writing have all the
above methods, except for readframes() and setpos().  In addition
the following methods exist.  The get*() methods can only be called after
the corresponding set*() methods have been called.  Before the first
writeframes() or writeframesraw(), all parameters except for the
number of frames must be filled in.
Create an AIFF file.  The default is that an AIFF-C file is created, unless the
name of the file ends in '.aiff' in which case the default is an AIFF file.
Create an AIFF-C file.  The default is that an AIFF-C file is created, unless
the name of the file ends in '.aiff' in which case the default is an AIFF
file.
Specify the number of channels in the audio file.
Specify the size in bytes of audio samples.
Specify the sampling frequency in frames per second.
Specify the number of frames that are to be written to the audio file. If this
parameter is not set, or not set correctly, the file needs to support seeking.
Specify the compression type.  If not specified, the audio data will
not be compressed.  In AIFF files, compression is not possible.
The name parameter should be a human-readable description of the
compression type as a bytes array, the type parameter should be a
bytes array of length 4.  Currently the following compression types
are supported: b'NONE', b'ULAW', b'ALAW', b'G722'.
Set all the above parameters at once.  The argument is a tuple consisting of the
various parameters.  This means that it is possible to use the result of a
getparams() call as argument to setparams().
Add a mark with the given id (larger than 0), and the given name at the given
position.  This method can be called at any time before close().
Return the current write position in the output file.  Useful in combination
with setmark().
Write data to the output file.  This method can only be called after the audio
file parameters have been set.
Changed in version 3.4: Any bytes-like object is now accepted.
Like writeframes(), except that the header of the audio file is not
updated.
Changed in version 3.4: Any bytes-like object is now accepted.
Close the AIFF file.  The header of the file is updated to reflect the actual
size of the audio data. After calling this method, the object can no longer be
used.
22.1. audioop — Manipulate raw audio data
22.3. sunau — Read and write Sun AU files

    Enter search terms or a module, class or function name.
    

