URL: https://docs.python.org/3/distributing/index.html

Title: Distributing Python Modules — Python 3.5.2 documentation

Doc Id: 5

Meta Tags : No meta tag found in document

Date :Jun 27, 2016

Content :As a popular open source development project, Python has an active
supporting community of contributors and users that also make their software
available for other Python developers to use under open source license terms.
This allows Python users to share and collaborate effectively, benefiting
from the solutions others have already created to common (and sometimes
even rare!) problems, as well as potentially contributing their own
solutions to the common pool.
This guide covers the distribution part of the process. For a guide to
installing other Python projects, refer to the
installation guide.
Note
For corporate and other institutional users, be aware that many
organisations have their own policies around using and contributing to
open source software. Please take such policies into account when making
use of the distribution and installation tools provided with Python.
In most parts of the world, software is automatically covered by copyright.
This means that other developers require explicit permission to copy, use,
modify and redistribute the software.
Open source licensing is a way of explicitly granting such permission in a
relatively consistent way, allowing developers to share and collaborate
efficiently by making common solutions to various problems freely available.
This leaves many developers free to spend more time focusing on the problems
that are relatively unique to their specific situation.
The distribution tools provided with Python are designed to make it
reasonably straightforward for developers to make their own contributions
back to that common pool of software if they choose to do so.
The same distribution tools can also be used to distribute software within
an organisation, regardless of whether that software is published as open
source software or not.
The standard library does not include build tools that support modern
Python packaging standards, as the core development team has found that it
is important to have standard tools that work consistently, even on older
versions of Python.
The currently recommended build and distribution tools can be installed
by invoking the pip module at the command line:
Note
For POSIX users (including Mac OS X and Linux users), these instructions
assume the use of a virtual environment.
For Windows users, these instructions assume that the option to
adjust the system PATH environment variable was selected when installing
Python.
The Python Packaging User Guide includes more details on the currently
recommended tools.
The Python Packaging User Guide covers the various key steps and elements
involved in creating a project:
These are quick answers or links for some common tasks.
This isn’t an easy topic, but here are a few tips:
This is actually quite a complex topic, with a variety of alternatives
available depending on exactly what you’re aiming to achieve. See the
Python Packaging User Guide for more information and recommendations.
See also
Python Packaging User Guide: Binary Extensions
API and ABI Versioning
Installing Python Modules

    Enter search terms or a module, class or function name.
    

